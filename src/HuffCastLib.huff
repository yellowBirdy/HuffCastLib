#define constant _INT8_MAX_PLUS_ONE   =   0x80
#define constant _INT16_MAX_PLUS_ONE  =   0x8000
#define constant _INT24_MAX_PLUS_ONE  =   0x800000
#define constant _INT32_MAX_PLUS_ONE  =   0x80000000
#define constant _INT40_MAX_PLUS_ONE  =   0x8000000000
#define constant _INT48_MAX_PLUS_ONE  =   0x800000000000
#define constant _INT56_MAX_PLUS_ONE  =   0x80000000000000
#define constant _INT64_MAX_PLUS_ONE  =   0x8000000000000000
#define constant _INT72_MAX_PLUS_ONE  =   0x800000000000000000
#define constant _INT80_MAX_PLUS_ONE  =   0x80000000000000000000
#define constant _INT88_MAX_PLUS_ONE  =   0x8000000000000000000000
#define constant _INT96_MAX_PLUS_ONE  =   0x800000000000000000000000
#define constant _INT104_MAX_PLUS_ONE =   0x80000000000000000000000000
#define constant _INT112_MAX_PLUS_ONE =   0x8000000000000000000000000000
#define constant _INT120_MAX_PLUS_ONE =   0x800000000000000000000000000000
#define constant _INT128_MAX_PLUS_ONE =   0x80000000000000000000000000000000
#define constant _INT136_MAX_PLUS_ONE =   0x8000000000000000000000000000000000
#define constant _INT144_MAX_PLUS_ONE =   0x800000000000000000000000000000000000
#define constant _INT152_MAX_PLUS_ONE =   0x80000000000000000000000000000000000000
#define constant _INT160_MAX_PLUS_ONE =   0x8000000000000000000000000000000000000000
#define constant _INT168_MAX_PLUS_ONE =   0x800000000000000000000000000000000000000000
#define constant _INT176_MAX_PLUS_ONE =   0x80000000000000000000000000000000000000000000
#define constant _INT184_MAX_PLUS_ONE =   0x8000000000000000000000000000000000000000000000
#define constant _INT192_MAX_PLUS_ONE =   0x800000000000000000000000000000000000000000000000
#define constant _INT200_MAX_PLUS_ONE =   0x80000000000000000000000000000000000000000000000000
#define constant _INT208_MAX_PLUS_ONE =   0x8000000000000000000000000000000000000000000000000000
#define constant _INT216_MAX_PLUS_ONE =   0x800000000000000000000000000000000000000000000000000000
#define constant _INT224_MAX_PLUS_ONE =   0x80000000000000000000000000000000000000000000000000000000
#define constant _INT232_MAX_PLUS_ONE =   0x8000000000000000000000000000000000000000000000000000000000
#define constant _INT240_MAX_PLUS_ONE =   0x800000000000000000000000000000000000000000000000000000000000
#define constant _INT248_MAX_PLUS_ONE =   0x80000000000000000000000000000000000000000000000000000000000000
#define constant _INT256_MAX_PLUS_ONE =   0x8000000000000000000000000000000000000000000000000000000000000000


#define constant _UINT8_MAX_PLUS_ONE   =   0x100
#define constant _UINT16_MAX_PLUS_ONE  =   0x10000
#define constant _UINT24_MAX_PLUS_ONE  =   0x1000000
#define constant _UINT32_MAX_PLUS_ONE  =   0x100000000
#define constant _UINT40_MAX_PLUS_ONE  =   0x10000000000
#define constant _UINT48_MAX_PLUS_ONE  =   0x1000000000000
#define constant _UINT56_MAX_PLUS_ONE  =   0x100000000000000
#define constant _UINT64_MAX_PLUS_ONE  =   0x10000000000000000
#define constant _UINT72_MAX_PLUS_ONE  =   0x1000000000000000000
#define constant _UINT80_MAX_PLUS_ONE  =   0x100000000000000000000
#define constant _UINT88_MAX_PLUS_ONE  =   0x10000000000000000000000
#define constant _UINT96_MAX_PLUS_ONE  =   0x1000000000000000000000000
#define constant _UINT104_MAX_PLUS_ONE =   0x100000000000000000000000000
#define constant _UINT112_MAX_PLUS_ONE =   0x10000000000000000000000000000
#define constant _UINT120_MAX_PLUS_ONE =   0x1000000000000000000000000000000
#define constant _UINT128_MAX_PLUS_ONE =   0x100000000000000000000000000000000
#define constant _UINT136_MAX_PLUS_ONE =   0x10000000000000000000000000000000000
#define constant _UINT144_MAX_PLUS_ONE =   0x1000000000000000000000000000000000000
#define constant _UINT152_MAX_PLUS_ONE =   0x100000000000000000000000000000000000000
#define constant _UINT160_MAX_PLUS_ONE =   0x10000000000000000000000000000000000000000
#define constant _UINT168_MAX_PLUS_ONE =   0x1000000000000000000000000000000000000000000
#define constant _UINT176_MAX_PLUS_ONE =   0x100000000000000000000000000000000000000000000
#define constant _UINT184_MAX_PLUS_ONE =   0x10000000000000000000000000000000000000000000000
#define constant _UINT192_MAX_PLUS_ONE =   0x1000000000000000000000000000000000000000000000000
#define constant _UINT200_MAX_PLUS_ONE =   0x100000000000000000000000000000000000000000000000000
#define constant _UINT208_MAX_PLUS_ONE =   0x10000000000000000000000000000000000000000000000000000
#define constant _UINT216_MAX_PLUS_ONE =   0x1000000000000000000000000000000000000000000000000000000
#define constant _UINT224_MAX_PLUS_ONE =   0x100000000000000000000000000000000000000000000000000000000
#define constant _UINT232_MAX_PLUS_ONE =   0x10000000000000000000000000000000000000000000000000000000000
#define constant _UINT240_MAX_PLUS_ONE =   0x1000000000000000000000000000000000000000000000000000000000000
#define constant _UINT248_MAX_PLUS_ONE =   0x100000000000000000000000000000000000000000000000000000000000000



#define constant _INT256_ZERO = 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF


#define error Overflow()


//#define constant __UINT24_MAX_PLUS_ONE  = 0x1000000
//#define constant __UINT16_MAX_PLUS_ONE  = 0x10000
//#define constant __UINT8_MAX_PLUS_ONE   = 0x100

/* Methods */

#define macro REVERT_OVERFLOW() = {
    __ERROR(Overflow)  
    0x00 mstore
    0x04 0x00 revert
}
#define macro TO_UINT8() = takes (1) returns (1) {  
    [_UINT8_MAX_PLUS_ONE]            
    dup2             
    lt              
    success jumpi     
    REVERT_OVERFLOW()
    success:           
}
#define macro TO_UINT16() = takes (1) returns (1) {  
    [_UINT16_MAX_PLUS_ONE]            
    dup2             
    lt              
    success jumpi     
    REVERT_OVERFLOW()
    success:            
}
#define macro TO_UINT24() = takes (1) returns (1) {  
    [_UINT24_MAX_PLUS_ONE]            
    dup2             
    lt              
    success jumpi     
    REVERT_OVERFLOW()
    success:           
}
#define macro TO_UINT32() = takes (1) returns (1) {  
    [_UINT32_MAX_PLUS_ONE]            
    dup2             
    lt              
    success jumpi     
    REVERT_OVERFLOW()
    success:            
}
#define macro TO_UINT40() = takes (1) returns (1) {  
    [_UINT40_MAX_PLUS_ONE]            
    dup2             
    lt              
    success jumpi     
    REVERT_OVERFLOW()
    success:            
}
#define macro TO_UINT48() = takes (1) returns (1) {  
    [_UINT48_MAX_PLUS_ONE]            
    dup2             
    lt              
    success jumpi     
    REVERT_OVERFLOW()
    success:            
}
#define macro TO_UINT56() = takes (1) returns (1) {  
    [_UINT56_MAX_PLUS_ONE]            
    dup2             
    lt              
    success jumpi     
    REVERT_OVERFLOW()
    success:            
}
#define macro TO_UINT64() = takes (1) returns (1) {  
    [_UINT64_MAX_PLUS_ONE]            
    dup2             
    lt              
    success jumpi     
    REVERT_OVERFLOW()
    success:            
}
#define macro TO_UINT72() = takes (1) returns (1) {  
    [_UINT72_MAX_PLUS_ONE]            
    dup2             
    lt              
    success jumpi     
    REVERT_OVERFLOW()
    success:            
}
#define macro TO_UINT80() = takes (1) returns (1) {  
    [_UINT80_MAX_PLUS_ONE]            
    dup2             
    lt              
    success jumpi     
    REVERT_OVERFLOW()
    success:            
}
#define macro TO_UINT88() = takes (1) returns (1) {  
    [_UINT88_MAX_PLUS_ONE]            
    dup2             
    lt              
    success jumpi     
    REVERT_OVERFLOW()
    success:            
}
#define macro TO_UINT96() = takes (1) returns (1) {  
    [_UINT96_MAX_PLUS_ONE]            
    dup2             
    lt              
    success jumpi     
    REVERT_OVERFLOW()
    success:            
}
// macros for 104, 112, 120, 128, 136, 144, 152, 160, 168, 176, 184, 192, 200, 208, 216, 224, 232, 240, 248
#define macro TO_UINT104() = takes (1) returns (1) {
    [_UINT104_MAX_PLUS_ONE]            
    dup2             
    lt              
    success jumpi     
    REVERT_OVERFLOW()
    success:            
}
#define macro TO_UINT112() = takes (1) returns (1) {
    [_UINT112_MAX_PLUS_ONE]                
    dup2             
    lt              
    success jumpi     
    REVERT_OVERFLOW()
    success:            
}
#define macro TO_UINT120() = takes (1) returns (1) {
    [_UINT120_MAX_PLUS_ONE]                            
    dup2             
    lt              
    success jumpi     
    REVERT_OVERFLOW()
    success:            
}
#define macro TO_UINT128() = takes (1) returns (1) {
    [_UINT128_MAX_PLUS_ONE]                            
    dup2
    lt
    success jumpi
    REVERT_OVERFLOW()
    success:
}
#define macro TO_UINT136() = takes (1) returns (1) {
    [_UINT136_MAX_PLUS_ONE]                            
    dup2
    lt
    success jumpi
    REVERT_OVERFLOW()
    success:
}
#define macro TO_UINT144() = takes (1) returns (1) {
    [_UINT144_MAX_PLUS_ONE]                            
    dup2
    lt
    success jumpi
    REVERT_OVERFLOW()
    success:
}
#define macro TO_UINT152() = takes (1) returns (1) {
    [_UINT152_MAX_PLUS_ONE]                            
    dup2
    lt
    success jumpi
    REVERT_OVERFLOW()
    success:
}
#define macro TO_UINT160() = takes (1) returns (1) {   
    [_UINT160_MAX_PLUS_ONE]                            
    dup2
    lt
    success jumpi
    REVERT_OVERFLOW()
    success:
}
#define macro TO_UINT168() = takes (1) returns (1) {
    [_UINT168_MAX_PLUS_ONE]                            
    dup2
    lt
    success jumpi
    REVERT_OVERFLOW()
    success:
}
#define macro TO_UINT176() = takes (1) returns (1) {
    [_UINT176_MAX_PLUS_ONE]                            
    dup2
    lt
    success jumpi
    REVERT_OVERFLOW()
    success:
}
#define macro TO_UINT184() = takes (1) returns (1) {
    [_UINT184_MAX_PLUS_ONE]                            
    dup2
    lt
    success jumpi
    REVERT_OVERFLOW()
    success:
}
#define macro TO_UINT192() = takes (1) returns (1) {
    [_UINT192_MAX_PLUS_ONE]                            
    dup2
    lt
    success jumpi
    REVERT_OVERFLOW()
    success:
}
#define macro TO_UINT200() = takes (1) returns (1) {
    [_UINT200_MAX_PLUS_ONE]                            
    dup2
    lt
    success jumpi
    REVERT_OVERFLOW()
    success:
}
#define macro TO_UINT208() = takes (1) returns (1) {
    [_UINT208_MAX_PLUS_ONE]                            
    dup2
    lt
    success jumpi
    REVERT_OVERFLOW()
    success:
}
#define macro TO_UINT216() = takes (1) returns (1) {
    [_UINT216_MAX_PLUS_ONE]                            
    dup2
    lt
    success jumpi
    REVERT_OVERFLOW()
    success:
}
#define macro TO_UINT224() = takes (1) returns (1) {
    [_UINT224_MAX_PLUS_ONE]                            
    dup2
    lt
    success jumpi
    REVERT_OVERFLOW()
    success:
}
#define macro TO_UINT232() = takes (1) returns (1) {
    [_UINT232_MAX_PLUS_ONE]                            
    dup2
    lt
    success jumpi
    REVERT_OVERFLOW()
    success:
}
#define macro TO_UINT240() = takes (1) returns (1) {
    [_UINT240_MAX_PLUS_ONE]                            
    dup2
    lt
    success jumpi
    REVERT_OVERFLOW()
    success:
}
#define macro TO_UINT248() = takes (1) returns (1) {
    [_UINT248_MAX_PLUS_ONE]                            
    dup2
    lt
    success jumpi
    REVERT_OVERFLOW()
    success:
}  


#define macro TO_INT8() = takes (1) returns (1) {
    [_INT8_MAX_PLUS_ONE]  
    dup2
    lt
    success jumpi
    REVERT_OVERFLOW()
    success:
}
#define macro TO_INT16() = takes (1) returns (1) {
    [_INT16_MAX_PLUS_ONE]  
    dup2
    lt
    success jumpi
    REVERT_OVERFLOW()
    success:
}
//define macros to_int24, to_int32, to_int40, to_int48, to_int56, to_int64, to_int72, to_int80, to_int88, to_int96, to_int104, to_int112, to_int120, to_int128, to_int136, to_int144, to_int152, to_int160, to_int168, to_int176, to_int184, to_int192, to_int200, to_int208, to_int216, to_int224, to_int232, to_int240, to_int248
#define macro TO_INT24() = takes (1) returns (1) {
    [_INT24_MAX_PLUS_ONE]  
    dup2
    lt
    success jumpi
    REVERT_OVERFLOW()
    success:
}
#define macro TO_INT32() = takes (1) returns (1) {
    [_INT32_MAX_PLUS_ONE]  
    dup2
    lt
    success jumpi
    REVERT_OVERFLOW()
    success:
}
#define macro TO_INT40() = takes (1) returns (1) {
    [_INT40_MAX_PLUS_ONE]  
    dup2
    lt
    success jumpi
    REVERT_OVERFLOW()
    success:
}
#define macro TO_INT48() = takes (1) returns (1) {
    [_INT48_MAX_PLUS_ONE]  
    dup2
    lt
    success jumpi
    REVERT_OVERFLOW()
    success:
}
#define macro TO_INT56() = takes (1) returns (1) {
    [_INT56_MAX_PLUS_ONE]  
    dup2
    lt
    success jumpi
    REVERT_OVERFLOW()
    success:
}
#define macro TO_INT64() = takes (1) returns (1) {
    [_INT64_MAX_PLUS_ONE]  
    dup2
    lt
    success jumpi
    REVERT_OVERFLOW()
    success:
}
#define macro TO_INT72() = takes (1) returns (1) {
    [_INT72_MAX_PLUS_ONE]  
    dup2
    lt
    success jumpi
    REVERT_OVERFLOW()
    success:
}
#define macro TO_INT80() = takes (1) returns (1) {
    [_INT80_MAX_PLUS_ONE]  
    dup2
    lt
    success jumpi
    REVERT_OVERFLOW()
    success:
}
#define macro TO_INT88() = takes (1) returns (1) {
    [_INT88_MAX_PLUS_ONE]  
    dup2
    lt
    success jumpi
    REVERT_OVERFLOW()
    success:
}
#define macro TO_INT96() = takes (1) returns (1) {
    [_INT96_MAX_PLUS_ONE]  
    dup2
    lt
    success jumpi
    REVERT_OVERFLOW()
    success:
}
// macros for 104, 112, 120, 128, 136, 144, 152, 160, 168, 176, 184, 192, 200, 208, 216, 224, 232, 240, 248
#define macro TO_INT104() = takes (1) returns (1) {
    [_INT104_MAX_PLUS_ONE]  
    dup2
    lt
    success jumpi
    REVERT_OVERFLOW()
    success:
}
#define macro TO_INT112() = takes (1) returns (1) {
    [_INT112_MAX_PLUS_ONE]  
    dup2
    lt
    success jumpi
    REVERT_OVERFLOW()
    success:
}
#define macro TO_INT120() = takes (1) returns (1) {
    [_INT120_MAX_PLUS_ONE]  
    dup2
    lt
    success jumpi
    REVERT_OVERFLOW()
    success:
}
#define macro TO_INT128() = takes (1) returns (1) {
    [_INT128_MAX_PLUS_ONE]  
    dup2
    lt
    success jumpi
    REVERT_OVERFLOW()
    success:
}
// define all remaining macros up to int256 
#define macro TO_INT136() = takes (1) returns (1) {
    [_INT136_MAX_PLUS_ONE]  
    dup2
    lt
    success jumpi
    REVERT_OVERFLOW()
    success:
}
#define macro TO_INT144() = takes (1) returns (1) {
    [_INT144_MAX_PLUS_ONE]  
    dup2
    lt
    success jumpi
    REVERT_OVERFLOW()
    success:
}
#define macro TO_INT152() = takes (1) returns (1) {
    [_INT152_MAX_PLUS_ONE]  
    dup2
    lt
    success jumpi
    REVERT_OVERFLOW()
    success:
}
#define macro TO_INT160() = takes (1) returns (1) {
    [_INT160_MAX_PLUS_ONE]  
    dup2
    lt
    success jumpi
    REVERT_OVERFLOW()
    success:
}
#define macro TO_INT168() = takes (1) returns (1) {
    [_INT168_MAX_PLUS_ONE]  
    dup2
    lt
    success jumpi
    REVERT_OVERFLOW()
    success:
}
#define macro TO_INT176() = takes (1) returns (1) {
    [_INT176_MAX_PLUS_ONE]  
    dup2
    lt
    success jumpi
    REVERT_OVERFLOW()
    success:
}
#define macro TO_INT184() = takes (1) returns (1) {
    [_INT184_MAX_PLUS_ONE]  
    dup2
    lt
    success jumpi
    REVERT_OVERFLOW()
    success:
}
#define macro TO_INT192() = takes (1) returns (1) {
    [_INT192_MAX_PLUS_ONE]  
    dup2
    lt
    success jumpi
    REVERT_OVERFLOW()
    success:
}
#define macro TO_INT200() = takes (1) returns (1) {
    [_INT200_MAX_PLUS_ONE]  
    dup2
    lt
    success jumpi
    REVERT_OVERFLOW()
    success:
}
#define macro TO_INT208() = takes (1) returns (1) {
    [_INT208_MAX_PLUS_ONE]  
    dup2
    lt
    success jumpi
    REVERT_OVERFLOW()
    success:
}
#define macro TO_INT216() = takes (1) returns (1) {
    [_INT216_MAX_PLUS_ONE]  
    dup2
    lt
    success jumpi
    REVERT_OVERFLOW()
    success:
}
#define macro TO_INT224() = takes (1) returns (1) {
    [_INT224_MAX_PLUS_ONE]  
    dup2
    lt
    success jumpi
    REVERT_OVERFLOW()
    success:
}
#define macro TO_INT232() = takes (1) returns (1) {
    [_INT232_MAX_PLUS_ONE]  
    dup2
    lt
    success jumpi
    REVERT_OVERFLOW()
    success:
}
#define macro TO_INT240() = takes (1) returns (1) {
    [_INT240_MAX_PLUS_ONE]  
    dup2
    lt
    success jumpi
    REVERT_OVERFLOW()
    success:
}
#define macro TO_INT248() = takes (1) returns (1) {
    [_INT248_MAX_PLUS_ONE]  
    dup2
    lt
    success jumpi
    REVERT_OVERFLOW()
    success:
}
#define macro TO_INT256() = takes (1) returns (1) {
    [_INT256_MAX_PLUS_ONE]  
    dup2
    lt
    success jumpi
    REVERT_OVERFLOW()
    success:
}


#define macro TO_UINT256() = takes (1) returns (1) {
    [_INT256_ZERO]
    dup2
    sgt
    success jumpi
    REVERT_OVERFLOW()
    success:
}
