//#define constant __UINT248_MAX_PLUS_ONE = 
//#define constant __UINT240_MAX_PLUS_ONE = 
//#define constant __UINT232_MAX_PLUS_ONE = 
//#define constant __UINT224_MAX_PLUS_ONE = 
//#define constant __UINT216_MAX_PLUS_ONE = 
//#define constant __UINT208_MAX_PLUS_ONE = 
//#define constant __UINT200_MAX_PLUS_ONE = 
//#define constant __UINT192_MAX_PLUS_ONE = 
//#define constant __UINT184_MAX_PLUS_ONE = 
//#define constant __UINT176_MAX_PLUS_ONE = 
//#define constant __UINT168_MAX_PLUS_ONE = 
//#define constant __UINT160_MAX_PLUS_ONE = 
//#define constant __UINT152_MAX_PLUS_ONE = 
//#define constant __UINT144_MAX_PLUS_ONE = 
//#define constant __UINT136_MAX_PLUS_ONE = 
//#define constant __UINT128_MAX_PLUS_ONE = 
//#define constant __UINT120_MAX_PLUS_ONE = 
//#define constant __UINT112_MAX_PLUS_ONE = 
//#define constant __UINT104_MAX_PLUS_ONE = 
//#define constant __UINT96_MAX_PLUS_ONE  = 
//#define constant __UINT88_MAX_PLUS_ONE  = 
//#define constant __UINT80_MAX_PLUS_ONE  = 
//#define constant __UINT72_MAX_PLUS_ONE  = 
//#define constant __UINT64_MAX_PLUS_ONE  = 
//#define constant __UINT56_MAX_PLUS_ONE  = 
//#define constant __UINT48_MAX_PLUS_ONE  = 
//#define constant __UINT40_MAX_PLUS_ONE  = 
//#define constant __UINT32_MAX_PLUS_ONE  = 


#define error Overflow()


//#define constant __UINT24_MAX_PLUS_ONE  = 0x1000000
//#define constant __UINT16_MAX_PLUS_ONE  = 0x10000
//#define constant __UINT8_MAX_PLUS_ONE   = 0x100

/* Methods */

#define macro REVERT_OVERFLOW() = {
    __ERROR(Overflow)  
    0x00 mstore
    0x04 0x00 revert
}
#define macro TO_UINT8() = takes (1) returns (1) {  
    0x100            
    dup2             
    lt              
    success jumpi     
    REVERT_OVERFLOW()
    success:           
}
#define macro TO_UINT16() = takes (1) returns (1) {  
    0x10000        
    dup2             
    lt              
    success jumpi     
    REVERT_OVERFLOW()
    success:            
}
#define macro TO_UINT24() = takes (1) returns (1) {  
    0x1000000            
    dup2             
    lt              
    success jumpi     
    REVERT_OVERFLOW()
    success:           
}
#define macro TO_UINT32() = takes (1) returns (1) {  
    0x100000000        
    dup2             
    lt              
    success jumpi     
    REVERT_OVERFLOW()
    success:            
}
#define macro TO_UINT40() = takes (1) returns (1) {  
    0x10000000000        
    dup2             
    lt              
    success jumpi     
    REVERT_OVERFLOW()
    success:            
}
#define macro TO_UINT48() = takes (1) returns (1) {  
    0x1000000000000        
    dup2             
    lt              
    success jumpi     
    REVERT_OVERFLOW()
    success:            
}
#define macro TO_UINT56() = takes (1) returns (1) {  
    0x100000000000000        
    dup2             
    lt              
    success jumpi     
    REVERT_OVERFLOW()
    success:            
}
#define macro TO_UINT64() = takes (1) returns (1) {  
    0x10000000000000000        
    dup2             
    lt              
    success jumpi     
    REVERT_OVERFLOW()
    success:            
}
#define macro TO_UINT72() = takes (1) returns (1) {  
    0x1000000000000000000        
    dup2             
    lt              
    success jumpi     
    REVERT_OVERFLOW()
    success:            
}
#define macro TO_UINT80() = takes (1) returns (1) {  
    0x100000000000000000000        
    dup2             
    lt              
    success jumpi     
    REVERT_OVERFLOW()
    success:            
}
#define macro TO_UINT88() = takes (1) returns (1) {  
    0x10000000000000000000000        
    dup2             
    lt              
    success jumpi     
    REVERT_OVERFLOW()
    success:            
}
#define macro TO_UINT96() = takes (1) returns (1) {  
    0x1000000000000000000000000        
    dup2             
    lt              
    success jumpi     
    REVERT_OVERFLOW()
    success:            
}
// macros for 104, 112, 120, 128, 136, 144, 152, 160, 168, 176, 184, 192, 200, 208, 216, 224, 232, 240, 248
#define macro TO_UINT104() = takes (1) returns (1) {
    0x100000000000000000000000000        
    dup2             
    lt              
    success jumpi     
    REVERT_OVERFLOW()
    success:            
}
#define macro TO_UINT112() = takes (1) returns (1) {
    0x10000000000000000000000000000        
    dup2             
    lt              
    success jumpi     
    REVERT_OVERFLOW()
    success:            
}
#define macro TO_UINT120() = takes (1) returns (1) {
    0x1000000000000000000000000000000        
    dup2             
    lt              
    success jumpi     
    REVERT_OVERFLOW()
    success:            
}
#define macro TO_UINT128() = takes (1) returns (1) {
    0x100000000000000000000000000000000
    dup2
    lt
    success jumpi
    REVERT_OVERFLOW()
    success:
}
#define macro TO_UINT136() = takes (1) returns (1) {
    0x10000000000000000000000000000000000
    dup2
    lt
    success jumpi
    REVERT_OVERFLOW()
    success:
}
#define macro TO_UINT144() = takes (1) returns (1) {
    0x1000000000000000000000000000000000000
    dup2
    lt
    success jumpi
    REVERT_OVERFLOW()
    success:
}
#define macro TO_UINT152() = takes (1) returns (1) {
    0x100000000000000000000000000000000000000
    dup2
    lt
    success jumpi
    REVERT_OVERFLOW()
    success:
}
#define macro TO_UINT160() = takes (1) returns (1) {   
    0x10000000000000000000000000000000000000000
    dup2
    lt
    success jumpi
    REVERT_OVERFLOW()
    success:
}
#define macro TO_UINT168() = takes (1) returns (1) {
    0x1000000000000000000000000000000000000000000
    dup2
    lt
    success jumpi
    REVERT_OVERFLOW()
    success:
}
#define macro TO_UINT176() = takes (1) returns (1) {
    0x100000000000000000000000000000000000000000000
    dup2
    lt
    success jumpi
    REVERT_OVERFLOW()
    success:
}
#define macro TO_UINT184() = takes (1) returns (1) {
    0x10000000000000000000000000000000000000000000000
    dup2
    lt
    success jumpi
    REVERT_OVERFLOW()
    success:
}
#define macro TO_UINT192() = takes (1) returns (1) {
    0x1000000000000000000000000000000000000000000000000
    dup2
    lt
    success jumpi
    REVERT_OVERFLOW()
    success:
}
#define macro TO_UINT200() = takes (1) returns (1) {
    0x100000000000000000000000000000000000000000000000000
    dup2
    lt
    success jumpi
    REVERT_OVERFLOW()
    success:
}
#define macro TO_UINT208() = takes (1) returns (1) {
    0x10000000000000000000000000000000000000000000000000000
    dup2
    lt
    success jumpi
    REVERT_OVERFLOW()
    success:
}
#define macro TO_UINT216() = takes (1) returns (1) {
    0x1000000000000000000000000000000000000000000000000000000
    dup2
    lt
    success jumpi
    REVERT_OVERFLOW()
    success:
}
#define macro TO_UINT224() = takes (1) returns (1) {
    0x100000000000000000000000000000000000000000000000000000000
    dup2
    lt
    success jumpi
    REVERT_OVERFLOW()
    success:
}
#define macro TO_UINT232() = takes (1) returns (1) {
    0x10000000000000000000000000000000000000000000000000000000000
    dup2
    lt
    success jumpi
    REVERT_OVERFLOW()
    success:
}
#define macro TO_UINT240() = takes (1) returns (1) {
    0x1000000000000000000000000000000000000000000000000000000000000
    dup2
    lt
    success jumpi
    REVERT_OVERFLOW()
    success:
}
#define macro TO_UINT248() = takes (1) returns (1) {
    0x100000000000000000000000000000000000000000000000000000000000000
    dup2
    lt
    success jumpi
    REVERT_OVERFLOW()
    success:
}  


#define macro TO_INT8() = takes (1) returns (1) {
    0x80  
    dup2
    lt
    success jumpi
    REVERT_OVERFLOW()
    success:
}
#define macro TO_INT16() = takes (1) returns (1) {
    0x8000
    dup2
    lt
    success jumpi
    REVERT_OVERFLOW()
    success:
}
//define macros to_int24, to_int32, to_int40, to_int48, to_int56, to_int64, to_int72, to_int80, to_int88, to_int96, to_int104, to_int112, to_int120, to_int128, to_int136, to_int144, to_int152, to_int160, to_int168, to_int176, to_int184, to_int192, to_int200, to_int208, to_int216, to_int224, to_int232, to_int240, to_int248
#define macro TO_INT24() = takes (1) returns (1) {
    0x800000
    dup2
    lt
    success jumpi
    REVERT_OVERFLOW()
    success:
}
#define macro TO_INT32() = takes (1) returns (1) {
    0x80000000
    dup2
    lt
    success jumpi
    REVERT_OVERFLOW()
    success:
}
#define macro TO_INT40() = takes (1) returns (1) {
    0x8000000000
    dup2
    lt
    success jumpi
    REVERT_OVERFLOW()
    success:
}
#define macro TO_INT48() = takes (1) returns (1) {
    0x800000000000
    dup2
    lt
    success jumpi
    REVERT_OVERFLOW()
    success:
}
#define macro TO_INT56() = takes (1) returns (1) {
    0x80000000000000
    dup2
    lt
    success jumpi
    REVERT_OVERFLOW()
    success:
}
#define macro TO_INT64() = takes (1) returns (1) {
    0x8000000000000000
    dup2
    lt
    success jumpi
    REVERT_OVERFLOW()
    success:
}
#define macro TO_INT72() = takes (1) returns (1) {
    0x800000000000000000
    dup2
    lt
    success jumpi
    REVERT_OVERFLOW()
    success:
}
#define macro TO_INT80() = takes (1) returns (1) {
    0x80000000000000000000
    dup2
    lt
    success jumpi
    REVERT_OVERFLOW()
    success:
}
#define macro TO_INT88() = takes (1) returns (1) {
    0x8000000000000000000000
    dup2
    lt
    success jumpi
    REVERT_OVERFLOW()
    success:
}
#define macro TO_INT96() = takes (1) returns (1) {
    0x800000000000000000000000
    dup2
    lt
    success jumpi
    REVERT_OVERFLOW()
    success:
}
// macros for 104, 112, 120, 128, 136, 144, 152, 160, 168, 176, 184, 192, 200, 208, 216, 224, 232, 240, 248
#define macro TO_INT104() = takes (1) returns (1) {
    0x80000000000000000000000000
    dup2
    lt
    success jumpi
    REVERT_OVERFLOW()
    success:
}
#define macro TO_INT112() = takes (1) returns (1) {
    0x8000000000000000000000000000
    dup2
    lt
    success jumpi
    REVERT_OVERFLOW()
    success:
}
#define macro TO_INT120() = takes (1) returns (1) {
    0x800000000000000000000000000000
    dup2
    lt
    success jumpi
    REVERT_OVERFLOW()
    success:
}
#define macro TO_INT128() = takes (1) returns (1) {
    0x80000000000000000000000000000000
    dup2
    lt
    success jumpi
    REVERT_OVERFLOW()
    success:
}
// define all remaining macros up to int256 
#define macro TO_INT136() = takes (1) returns (1) {
    0x8000000000000000000000000000000000
    dup2
    lt
    success jumpi
    REVERT_OVERFLOW()
    success:
}
#define macro TO_INT144() = takes (1) returns (1) {
    0x800000000000000000000000000000000000
    dup2
    lt
    success jumpi
    REVERT_OVERFLOW()
    success:
}
#define macro TO_INT152() = takes (1) returns (1) {
    0x80000000000000000000000000000000000000
    dup2
    lt
    success jumpi
    REVERT_OVERFLOW()
    success:
}
#define macro TO_INT160() = takes (1) returns (1) {
    0x8000000000000000000000000000000000000000
    dup2
    lt
    success jumpi
    REVERT_OVERFLOW()
    success:
}
#define macro TO_INT168() = takes (1) returns (1) {
    0x800000000000000000000000000000000000000000
    dup2
    lt
    success jumpi
    REVERT_OVERFLOW()
    success:
}
#define macro TO_INT176() = takes (1) returns (1) {
    0x80000000000000000000000000000000000000000000
    dup2
    lt
    success jumpi
    REVERT_OVERFLOW()
    success:
}
#define macro TO_INT184() = takes (1) returns (1) {
    0x8000000000000000000000000000000000000000000000
    dup2
    lt
    success jumpi
    REVERT_OVERFLOW()
    success:
}
#define macro TO_INT192() = takes (1) returns (1) {
    0x800000000000000000000000000000000000000000000000
    dup2
    lt
    success jumpi
    REVERT_OVERFLOW()
    success:
}
#define macro TO_INT200() = takes (1) returns (1) {
    0x80000000000000000000000000000000000000000000000000
    dup2
    lt
    success jumpi
    REVERT_OVERFLOW()
    success:
}
#define macro TO_INT208() = takes (1) returns (1) {
    0x8000000000000000000000000000000000000000000000000000
    dup2
    lt
    success jumpi
    REVERT_OVERFLOW()
    success:
}
#define macro TO_INT216() = takes (1) returns (1) {
    0x800000000000000000000000000000000000000000000000000000
    dup2
    lt
    success jumpi
    REVERT_OVERFLOW()
    success:
}
#define macro TO_INT224() = takes (1) returns (1) {
    0x80000000000000000000000000000000000000000000000000000000
    dup2
    lt
    success jumpi
    REVERT_OVERFLOW()
    success:
}
#define macro TO_INT232() = takes (1) returns (1) {
    0x8000000000000000000000000000000000000000000000000000000000
    dup2
    lt
    success jumpi
    REVERT_OVERFLOW()
    success:
}
#define macro TO_INT240() = takes (1) returns (1) {
    0x800000000000000000000000000000000000000000000000000000000000
    dup2
    lt
    success jumpi
    REVERT_OVERFLOW()
    success:
}
#define macro TO_INT248() = takes (1) returns (1) {
    0x80000000000000000000000000000000000000000000000000000000000000
    dup2
    lt
    success jumpi
    REVERT_OVERFLOW()
    success:
}
#define macro TO_INT256() = takes (1) returns (1) {
    0x8000000000000000000000000000000000000000000000000000000000000000
    dup2
    lt
    success jumpi
    REVERT_OVERFLOW()
    success:
}


#define macro TO_UINT256() = takes (1) returns (1) {
    0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
    dup2
    sgt
    success jumpi
    REVERT_OVERFLOW()
    success:
}
